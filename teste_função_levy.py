# -*- coding: utf-8 -*-
"""Teste Função Levy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dmvV-sRUvAjj8-HicgDzen4m1P_5JvHt

#Script para extrair e analisar os dados gerados pela função rng_levy48()

Geramos os dados a partir do programa em C, testando os valores gerados pela função rng_levy48() para os valores sugeridos de alpha e ell. A partir desta nota, viso descrever cada passo realizado para extrair os dados e automatizando estes processos.

## Importando as Bibliotecas
"""

import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler

"""##Chamando a base de dados

Chamamos a base de dados e printamos os 5 primeiros e 5 últimos valores.
"""

dados_levy = pd.read_csv("dados_levy.csv")
dados_levy

"""Podemos perceber na base de dados, que devido a natureza da função, há o aparecimento de alguns valores que flutuam muito em relação aos demais. Para fins de plot de gráficos, é interessante filtrarmos esses valores do nosso banco de dados, escolhi fazer isso pegando apenas valores entre -110 e 110 utilizando o código abaixo"""

# definindo as variáveis 
meta_dado = []
meta_dado.append(dados_levy)
for column in dados_levy:
  index = dados_levy.columns.get_loc(column)
  meta_dado.append(meta_dado[index][(meta_dado[index][column]>-110) & (meta_dado[index][column]<110)])

dados_formatados = meta_dado[-1]
dados_formatados

"""Vemos que por conta disso, o nosso número de ponto acaba por abaixar bastante em relação ao inicial, sendo o total de 6695 pontos, com antes tendo 10 mil. Apesar do número relativamente alto de pontos retirados da análise, o número restante ainda é o suficiente para que façamos os gráficos que desejamos. Estes gráficos são obtidos a partir do loop abaixo"""

fig, axs = plt.subplots(12, 1, tight_layout=True, sharex=True, figsize=(16,64))


for i in dados_formatados:

  axs[dados_formatados.columns.get_loc(i)].hist(dados_formatados[i], bins=50, density=True)
  axs[dados_formatados.columns.get_loc(i)].set_title(i)

